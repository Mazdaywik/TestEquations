
*$MST_FROM_ENTRY;

*$MATCHING ForRepeatedSpecialization ;

*$STRATEGY Applicative ;
/*
$ENTRY Go {
 = <Prout <Go e.1 >> ;
}
*/

***
/*
*  InputFormat: <Go e.41 >
*  OutputFormat: ==> e.0 
*/


$ENTRY Go {
 (('Cs -> empty') e.101) =  False;
 (('Cs -> d Cs') ('Cs -> empty') e.101) =  False;
 (('Cs -> d Cs') ('Cs -> d Cs') ('Cs -> empty') e.101) =  False;
 (('Cs -> d Cs') ('Cs -> d Cs') ('Cs -> c Cs') ('Cs -> empty') e.101) =  False;
 (('Cs -> d Cs') ('Cs -> d Cs') ('Cs -> c Cs') ('Cs -> b Cs') ('Cs -> empty') e.101) =  False;
 (('Cs -> d Cs') ('Cs -> d Cs') ('Cs -> c Cs') ('Cs -> b Cs') ('Cs -> d Cs') ('Cs -> empty') e.101) =  False;
 (('Cs -> d Cs') ('Cs -> d Cs') ('Cs -> c Cs') ('Cs -> b Cs') ('Cs -> d Cs') ('Cs -> f Cs') ('Cs -> empty') e.101) =  False;
 (('Cs -> d Cs') ('Cs -> d Cs') ('Cs -> c Cs') ('Cs -> b Cs') ('Cs -> d Cs') ('Cs -> f Cs') ('Cs -> f Cs') ('Cs -> empty') e.101) =  False;
 (('Cs -> d Cs') ('Cs -> d Cs') ('Cs -> c Cs') ('Cs -> b Cs') ('Cs -> d Cs') ('Cs -> f Cs') ('Cs -> f Cs') ('Cs -> b Cs') ('Cs -> empty') e.101) =  False
               ;
 (('Cs -> d Cs') ('Cs -> d Cs') ('Cs -> c Cs') ('Cs -> b Cs') ('Cs -> d Cs') ('Cs -> f Cs')
    ('Cs -> f Cs') ('Cs -> b Cs') ('Cs -> e Cs') ('Cs -> empty') e.101
 ) =  False;
 (('Cs -> d Cs') ('Cs -> d Cs') ('Cs -> c Cs') ('Cs -> b Cs') ('Cs -> d Cs') ('Cs -> f Cs')
    ('Cs -> f Cs') ('Cs -> b Cs') ('Cs -> e Cs') ('Cs -> d Cs') ('Cs -> empty') e.101
 ) =  False;
 (('Cs -> d Cs') ('Cs -> d Cs') ('Cs -> c Cs') ('Cs -> b Cs') ('Cs -> d Cs') ('Cs -> f Cs') ('Cs -> f Cs')
    ('Cs -> b Cs') ('Cs -> e Cs') ('Cs -> d Cs') ('Cs -> f Cs') ('Cs -> empty') e.101
 ) =  False;
 (('Cs -> d Cs') ('Cs -> d Cs') ('Cs -> c Cs') ('Cs -> b Cs') ('Cs -> d Cs') ('Cs -> f Cs') ('Cs -> f Cs')
    ('Cs -> b Cs') ('Cs -> e Cs') ('Cs -> d Cs') ('Cs -> f Cs') ('Cs -> f Cs') ('Cs -> empty') e.101
 ) =  False;
 (('Cs -> d Cs') ('Cs -> d Cs') ('Cs -> c Cs') ('Cs -> b Cs') ('Cs -> d Cs') ('Cs -> f Cs') ('Cs -> f Cs') ('Cs -> b Cs')
    ('Cs -> e Cs') ('Cs -> d Cs') ('Cs -> f Cs') ('Cs -> f Cs') ('Cs -> c Cs') ('Cs -> empty') e.101
 ) =  False;
 (('Cs -> d Cs') ('Cs -> d Cs') ('Cs -> c Cs') ('Cs -> b Cs') ('Cs -> d Cs') ('Cs -> f Cs') ('Cs -> f Cs') ('Cs -> b Cs')
    ('Cs -> e Cs') ('Cs -> d Cs') ('Cs -> f Cs') ('Cs -> f Cs') ('Cs -> c Cs') ('Cs -> f Cs') ('Cs -> empty') e.101
 ) =  False;
 (('Cs -> d Cs') ('Cs -> d Cs') ('Cs -> c Cs') ('Cs -> b Cs') ('Cs -> d Cs') ('Cs -> f Cs') ('Cs -> f Cs') ('Cs -> b Cs')
    ('Cs -> e Cs') ('Cs -> d Cs') ('Cs -> f Cs') ('Cs -> f Cs') ('Cs -> c Cs') ('Cs -> f Cs') ('Cs -> d Cs') ('Cs -> empty')
 ) =  True;
 (('Cs -> d Cs') ('Cs -> d Cs') ('Cs -> c Cs') ('Cs -> b Cs') ('Cs -> d Cs') ('Cs -> f Cs') ('Cs -> f Cs') ('Cs -> b Cs') ('Cs -> e Cs')
    ('Cs -> d Cs') ('Cs -> f Cs') ('Cs -> f Cs') ('Cs -> c Cs') ('Cs -> f Cs') ('Cs -> d Cs') ('Cs -> empty') e.101
 ) =  False;
 (('Cs -> d Cs') ('Cs -> d Cs') ('Cs -> c Cs') ('Cs -> b Cs') ('Cs -> d Cs') ('Cs -> f Cs') ('Cs -> f Cs') ('Cs -> b Cs')
    ('Cs -> e Cs') ('Cs -> d Cs') ('Cs -> f Cs') ('Cs -> f Cs') ('Cs -> c Cs') ('Cs -> f Cs') ('Cs -> d Cs') e.101
 ) =  False;
 (('Cs -> d Cs') ('Cs -> d Cs') ('Cs -> c Cs') ('Cs -> b Cs') ('Cs -> d Cs') ('Cs -> f Cs') ('Cs -> f Cs') ('Cs -> b Cs')
    ('Cs -> e Cs') ('Cs -> d Cs') ('Cs -> f Cs') ('Cs -> f Cs') ('Cs -> c Cs') ('Cs -> f Cs') e.101
 ) =  False;
 (('Cs -> d Cs') ('Cs -> d Cs') ('Cs -> c Cs') ('Cs -> b Cs') ('Cs -> d Cs') ('Cs -> f Cs') ('Cs -> f Cs')
    ('Cs -> b Cs') ('Cs -> e Cs') ('Cs -> d Cs') ('Cs -> f Cs') ('Cs -> f Cs') ('Cs -> c Cs') e.101
 ) =  False;
 (('Cs -> d Cs') ('Cs -> d Cs') ('Cs -> c Cs') ('Cs -> b Cs') ('Cs -> d Cs') ('Cs -> f Cs') ('Cs -> f Cs')
    ('Cs -> b Cs') ('Cs -> e Cs') ('Cs -> d Cs') ('Cs -> f Cs') ('Cs -> f Cs') e.101
 ) =  False;
 (('Cs -> d Cs') ('Cs -> d Cs') ('Cs -> c Cs') ('Cs -> b Cs') ('Cs -> d Cs') ('Cs -> f Cs')
    ('Cs -> f Cs') ('Cs -> b Cs') ('Cs -> e Cs') ('Cs -> d Cs') ('Cs -> f Cs') e.101
 ) =  False;
 (('Cs -> d Cs') ('Cs -> d Cs') ('Cs -> c Cs') ('Cs -> b Cs') ('Cs -> d Cs') ('Cs -> f Cs')
    ('Cs -> f Cs') ('Cs -> b Cs') ('Cs -> e Cs') ('Cs -> d Cs') e.101
 ) =  False;
 (('Cs -> d Cs') ('Cs -> d Cs') ('Cs -> c Cs') ('Cs -> b Cs') ('Cs -> d Cs') ('Cs -> f Cs') ('Cs -> f Cs') ('Cs -> b Cs') ('Cs -> e Cs') e.101) =  False
               ;
 (('Cs -> d Cs') ('Cs -> d Cs') ('Cs -> c Cs') ('Cs -> b Cs') ('Cs -> d Cs') ('Cs -> f Cs') ('Cs -> f Cs') ('Cs -> b Cs') e.101) =  False;
 (('Cs -> d Cs') ('Cs -> d Cs') ('Cs -> c Cs') ('Cs -> b Cs') ('Cs -> d Cs') ('Cs -> f Cs') ('Cs -> f Cs') e.101) =  False;
 (('Cs -> d Cs') ('Cs -> d Cs') ('Cs -> c Cs') ('Cs -> b Cs') ('Cs -> d Cs') ('Cs -> f Cs') e.101) =  False;
 (('Cs -> d Cs') ('Cs -> d Cs') ('Cs -> c Cs') ('Cs -> b Cs') ('Cs -> d Cs') e.101) =  False;
 (('Cs -> d Cs') ('Cs -> d Cs') ('Cs -> c Cs') ('Cs -> b Cs') e.101) =  False;
 (('Cs -> d Cs') ('Cs -> d Cs') ('Cs -> c Cs') e.101) =  False;
 (('Cs -> d Cs') ('Cs -> d Cs') e.101) =  False;
 (('Cs -> d Cs') e.101) =  False;
 (e.101) =  False;
}

****************************** The End ************************************
